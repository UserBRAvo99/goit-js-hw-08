{"mappings":"mkBAAA,aACAA,OAAOC,eAAeC,EAAAC,QAAS,aAAc,CACzCC,OAAO,IAEXF,EAAAC,QAAQE,QACR,SAAyBC,GACrB,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,C,uCCNnC,aACAN,OAAOC,eAAeC,EAAAC,QAAS,aAAc,CACzCC,OAAO,IAEXF,EAAAC,QAAQE,QACR,SAA0BI,GACtB,GAAsB,oBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOF,MAAMK,KAAKH,E,uCCNxH,aACAT,OAAOC,eAAeC,EAAAC,QAAS,aAAc,CACzCC,OAAO,IAEXF,EAAAC,QAAQE,QACR,WACI,MAAM,IAAIQ,UAAU,6I,uCCNxB,aACAb,OAAOC,eAAeC,EAAAC,QAAS,aAAc,CACzCC,OAAO,IAEXF,EAAAC,QAAQE,QAER,SAAqCS,EAAGC,GACpC,IAAKD,EAAG,OACR,GAAiB,iBAANA,EAAgB,OAAOE,EAAuBX,QAAQS,EAAGC,GACpE,IAAIE,EAAIjB,OAAOkB,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAG,GACzC,WAANJ,GAAkBH,EAAEQ,cAAaL,EAAIH,EAAEQ,YAAYC,MACvD,GAAU,QAANN,GAAqB,QAANA,EAAa,OAAOV,MAAMK,KAAKK,GAClD,GAAU,cAANA,GAAqB,2CAA2CO,KAAKP,GAAI,OAAOD,EAAuBX,QAAQS,EAAGC,E,EAP1H,IASgCU,EAT5BT,GAS4BS,EATeC,EAAA,WAU7BD,EAAIE,WAAaF,EAAM,CACjCpB,QAASoB,E,sCChBjB,aACAzB,OAAOC,eAAeC,EAAAC,QAAS,aAAc,CACzCC,OAAO,IAEXF,EAAAC,QAAQE,QACR,SAA2BC,EAAKsB,IACjB,MAAPA,GAAeA,EAAMtB,EAAIuB,UAAQD,EAAMtB,EAAIuB,QAC/C,IAAI,IAAIC,EAAI,EAAGC,EAAO,IAAIxB,MAAMqB,GAAME,EAAIF,EAAKE,IAAIC,EAAKD,GAAKxB,EAAIwB,GACjE,OAAOC,C,cCPX/B,OAAOC,eAAe+B,EAAS,aAAc,CACzC5B,OAAO,IAEX4B,EAAQ3B,QAKR,SAAwBC,EAAKwB,GACzB,OAAOG,EAAqB5B,QAAQC,IAAQ4B,EAAsB7B,QAAQC,EAAKwB,IAAMK,EAAiC9B,QAAQC,EAAKwB,IAAMM,EAAsB/B,S,EALnK,IAAI4B,EAAkBI,EAAuBX,EAAA,UACzCQ,EAAmBG,EAAuBX,EAAA,UAC1CU,EAAmBC,EAAuBX,EAAA,UAC1CS,EAA8BE,EAAuBX,EAAA,UAIzD,SAASW,EAAuBZ,GAC5B,OAAOA,GAAOA,EAAIE,WAAaF,EAAM,CACjCpB,QAASoB,E,CCdjB,IAAMa,EAASC,SAASC,cAAc,kBAChCC,EAAM,sBAERC,EAAW,GAEgEJ,EAAxEK,iBAAiB,SAKY,SAAdC,GAE2CF,EAAtDE,EAAMC,OAAOtB,MAAQqB,EAAMC,OAAOzC,MAE+C0C,aAA7EC,QAAQN,EAAKO,KAAKC,UAAUP,G,IAPoCJ,EAAxEK,iBAAiB,UAkCP,SAACC,GAE8DA,EAAxEM,iBAEeC,QAAbC,IAAIV,GAECA,EAAF,GAE4BI,aAA1BO,WAAWZ,GAExBH,EAAOgB,O,IAlCiC,WAEuB,IAAzDC,EAAeT,aAAaU,QAAQf,GAEyB,GAA9Dc,EAE8C,IAE4Bb,EAAlEM,KAAKS,MAAMF,GAGsCvD,OAArD0D,QAAQhB,GAAUiB,SAAQ,SAAAC,G,gBAAEC,EAAGC,EAAA,GAAE1D,EAAK0D,EAAA,GAE0BxB,EAA9DuB,GAAKzD,MAAQA,C,IAEtB,MAAO2D,G,EAKMC,E","sources":["node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","src/js/03-feedback.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","const formEl = document.querySelector('.feedback-form');\nconst key = 'feedback-form-state';\n// 1 створюємо пустий об'єкт, в який будемо записувати данні з форми\nlet formData = {};\n// 2 ставимо слухача на форму (подія input) та вказуємо калбєк функцію handlerInput яка буде приймати подію як параметр\nformEl.addEventListener('input', handlerInput);\n// 15 ставимо слухача на форму (подія submit) та вказуємо калбєк функцію onSubmit яка буде приймати подію як параметр\nformEl.addEventListener('submit', onSubmit);\n\n// 3 оголошуємо функцію в якій приймаємо подію event\nfunction handlerInput(event) {\n  // 4 в formData через квадратні дужки(динамічно) додаємо ключ[event.target.name] та вказуємо значення ключа\n  formData[event.target.name] = event.target.value;\n  // 5 в локальне сховище передаємо(та зберігаємо) значення key та об'єкт formData за допомогою JSON.stringify(formData) (передає ключ і значення як рядок)\n  localStorage.setItem(key, JSON.stringify(formData));\n}\n// 6 оголошуємо функцію для збереження данних в формі\nfunction getFormData() {\n  // 7 оголошуємо змінну та передаємо їй значення з локалбного сховища за ключем\n  const saveFormData = localStorage.getItem(key);\n  // 8 перевіряємо змінну saveFormData (за допомогою інверсії), якщо вона пуста то виходимо з функції\n  if (!saveFormData) return;\n  // 9 додаємо try catch для потенційно небезпечного коду (JSON.parse - таким і являється)\n  try {\n    // 10 перевизначаємо formData та передаємо saveFormData(в форматі рядок: рядок), парсимо за допомогою JSON.parse щоб отримати об'єкт\n    formData = JSON.parse(saveFormData);\n    // 11 за допомогою метода Object.entries перетворюємо formData в багатовимірний масив (масив масивів)\n    // 12 перебираємо масив forEach, одразу деструктуризуємо масив по ключу та значенню\n    Object.entries(formData).forEach(([key, value]) => {\n      // 13 перезаписуємо значення форми на отримане з formData (тобто записаного в локаьному сховищі)\n      formEl[key].value = value;\n    });\n  } catch (error) {\n    // в випадку отримання не валіднорго коду , тобто якщо try не виконається, наша сторінка не злетить\n  }\n}\n// 14 викликаємо функцію getFormData\ngetFormData();\n\n// функція onSubmit спрацює на натискання кнопки Submit\n// 16 оголошуємо функцію onSubmit\nfunction onSubmit(event) {\n  // 17 скасовуємо дію браузера за замовчуванням  (не перезавантажуємо сторінку при кліку по кнопці Submit)\n  event.preventDefault();\n  // 18 виводимо в консоль об'єкт formData\n  console.log(formData);\n  // 19 очищуємо об'єкт formData\n  formData = {};\n  // 20 видаляємо з локального сховища данні по ключу\n  localStorage.removeItem(key);\n  // 21 видаляємо данні з форми\n  formEl.reset();\n}\n"],"names":["Object","defineProperty","module","exports","value","default","arr","Array","isArray","iter","Symbol","iterator","from","TypeError","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","test","obj","parcelRequire","__esModule","len","length","i","arr2","$111a013c31e2261e$exports","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","$b00c40859be242c5$var$formEl","document","querySelector","$b00c40859be242c5$var$key","$b00c40859be242c5$var$formData","addEventListener","event","target","localStorage","setItem","JSON","stringify","preventDefault","console","log","removeItem","reset","saveFormData","getItem","parse","entries","forEach","param","key1","_param","error","$b00c40859be242c5$var$getFormData"],"version":3,"file":"03-feedback.116b4121.js.map"}