{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,kBAGc,IAAhDC,EAAW,GAEgEH,EAAxEI,iBAAiB,SAKY,SAAdC,GAE2CF,EAAtDE,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,MAE+CC,aAA7EC,QAbH,sBAagBC,KAAKC,UAAUT,G,IAPoCH,EAAxEI,iBAAiB,UAkCP,SAACC,GAE8DA,EAAxEQ,iBAEeC,QAAbC,IAAIZ,GAECA,EAAF,GAE4BM,aAA1BO,WAhDH,uBAkDVhB,EAAOiB,O,IAlCiC,WAEuB,MAAzDC,EAAeT,aAAaU,QAlBxB,uBAoByD,GAA9DD,EAE8C,IAE4Bf,EAAlEQ,KAAKS,MAAMF,GAGsCG,OAArDC,QAAQnB,GAAUoB,SAAQ,EAAEC,EAAKhB,MAE+BR,EAA9DwB,GAAKhB,MAAQA,CAAK,G,CAE3B,MAAOiB,G,EAKMC","sources":["src/js/03-feedback.js"],"sourcesContent":["const formEl = document.querySelector('.feedback-form');\nconst key = 'feedback-form-state';\n// 1 створюємо пустий об'єкт, в який будемо записувати данні з форми\nlet formData = {};\n// 2 ставимо слухача на форму (подія input) та вказуємо калбєк функцію handlerInput яка буде приймати подію як параметр\nformEl.addEventListener('input', handlerInput);\n// 15 ставимо слухача на форму (подія submit) та вказуємо калбєк функцію onSubmit яка буде приймати подію як параметр\nformEl.addEventListener('submit', onSubmit);\n\n// 3 оголошуємо функцію в якій приймаємо подію event\nfunction handlerInput(event) {\n  // 4 в formData через квадратні дужки(динамічно) додаємо ключ[event.target.name] та вказуємо значення ключа\n  formData[event.target.name] = event.target.value;\n  // 5 в локальне сховище передаємо(та зберігаємо) значення key та об'єкт formData за допомогою JSON.stringify(formData) (передає ключ і значення як рядок)\n  localStorage.setItem(key, JSON.stringify(formData));\n}\n// 6 оголошуємо функцію для збереження данних в формі\nfunction getFormData() {\n  // 7 оголошуємо змінну та передаємо їй значення з локалбного сховища за ключем\n  const saveFormData = localStorage.getItem(key);\n  // 8 перевіряємо змінну saveFormData (за допомогою інверсії), якщо вона пуста то виходимо з функції\n  if (!saveFormData) return;\n  // 9 додаємо try catch для потенційно небезпечного коду (JSON.parse - таким і являється)\n  try {\n    // 10 перевизначаємо formData та передаємо saveFormData(в форматі рядок: рядок), парсимо за допомогою JSON.parse щоб отримати об'єкт\n    formData = JSON.parse(saveFormData);\n    // 11 за допомогою метода Object.entries перетворюємо formData в багатовимірний масив (масив масивів)\n    // 12 перебираємо масив forEach, одразу деструктуризуємо масив по ключу та значенню\n    Object.entries(formData).forEach(([key, value]) => {\n      // 13 перезаписуємо значення форми на отримане з formData (тобто записаного в локаьному сховищі)\n      formEl[key].value = value;\n    });\n  } catch (error) {\n    // в випадку отримання не валіднорго коду , тобто якщо try не виконається, наша сторінка не злетить\n  }\n}\n// 14 викликаємо функцію getFormData\ngetFormData();\n\n// функція onSubmit спрацює на натискання кнопки Submit\n// 16 оголошуємо функцію onSubmit\nfunction onSubmit(event) {\n  // 17 скасовуємо дію браузера за замовчуванням  (не перезавантажуємо сторінку при кліку по кнопці Submit)\n  event.preventDefault();\n  // 18 виводимо в консоль об'єкт formData\n  console.log(formData);\n  // 19 очищуємо об'єкт formData\n  formData = {};\n  // 20 видаляємо з локального сховища данні по ключу\n  localStorage.removeItem(key);\n  // 21 видаляємо данні з форми\n  formEl.reset();\n}\n"],"names":["$945622fd0f572e60$var$formEl","document","querySelector","$945622fd0f572e60$var$formData","addEventListener","event","target","name","value","localStorage","setItem","JSON","stringify","preventDefault","console","log","removeItem","reset","saveFormData","getItem","parse","Object","entries","forEach","key1","error","$945622fd0f572e60$var$getFormData"],"version":3,"file":"03-feedback.3ed1e3e8.js.map"}